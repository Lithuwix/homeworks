{"version":3,"sources":["p2-homeworks/h2/Affair.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/HW2.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","css","message","ava_container","src","avatar","alt","ava_img","message_body","name","message_text","message_time_container","message_time","time","messageData","HW1","Affair","priority","s","container","onClick","_id","affair","deleteAffairCallback","task_item_del_btn","task_item","task_priority","high_p","middle_p","low_p","Affairs","mappedAffairs","data","map","a","key","setFilter","filter","buttons","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","main_container","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","errorMessageClass","errorText","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","v1","HW3","setUsers","id","newUser","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","children","SuperCheckbox","onChangeChecked","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8ca8ce0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task_item\":\"Affair_task_item__1I0JL\",\"task_priority\":\"Affair_task_priority__3RPuE\",\"task_item_del_btn\":\"Affair_task_item_del_btn__25dsq\",\"container\":\"Affair_container__1tXjH\",\"high_p\":\"Affair_high_p__1b13h\",\"middle_p\":\"Affair_middle_p__3oChP\",\"low_p\":\"Affair_low_p__L1Wpr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2NgXI\",\"ava_img\":\"Message_ava_img__bm7Pn\",\"message_body\":\"Message_message_body__1jPgq\",\"name\":\"Message_name__20VmM\",\"message_text\":\"Message_message_text__27vM2\",\"message_time_container\":\"Message_message_time_container__2Mlnv\",\"message_time\":\"Message_message_time__2CxKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__3n0XZ\",\"buttons\":\"Affairs_buttons__28xk5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3PZLy\",\"error\":\"Greeting_error__v9Ag6\",\"errorText\":\"Greeting_errorText__3hAG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__e4b6H\",\"errorInput\":\"SuperInputText_errorInput__2i4FP\",\"error\":\"SuperInputText_error__1c8Em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__v-IAu\",\"column\":\"HW4_column__3ODle\",\"testSpanError\":\"HW4_testSpanError__1BLMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__WskJF\",\"red\":\"SuperButton_red__1zpTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__f6XvF\",\"spanClassName\":\"SuperCheckbox_spanClassName__KRU-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__24n1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"HW2_main_container__3MKiD\"};","import React from 'react'\r\nimport css from \"./Message.module.css\"\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nexport function Message(props : MessagePropsType) {\r\n    return (\r\n        <div className={css.message}>\r\n            <div className={css.ava_container}>\r\n                <img src={props.avatar} alt=\"ava\" className={css.ava_img}/>\r\n            </div>\r\n            <div className={css.message_body}>\r\n                <div>\r\n                    <div className={css.name}>{props.name}</div>\r\n                    <div className={css.message_text}>{props.message}</div>\r\n                </div>\r\n                <div className={css.message_time_container}>\r\n                    <div className={css.message_time}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Message} from \"./Message\";\r\n\r\nconst messageData =\r\n    {\r\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n        name: 'Some Name',\r\n        message: 'some text',\r\n        time: '22:00',\r\n    }\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport s from './Affair.module.css'\r\nimport {AffairItemsType, AffairPriorityType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairItemsType // need to fix any\r\n    deleteAffairCallback: (_id: number)=>void// need to fix any\r\n}\r\n\r\nconst renderDifferentPriority = (priority: AffairPriorityType) => {\r\n    if (priority === 'high') {\r\n        return <span className={`${s.task_priority} ${s.high_p}`}>{priority}</span>\r\n    }\r\n    if (priority === 'middle') {\r\n        return <span className={`${s.task_priority} ${s.middle_p}`}>{priority}</span>\r\n    }\r\n    if (priority === 'low') {\r\n        return <span className={`${s.task_priority} ${s.low_p}`}>{priority}</span>\r\n    }\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = (_id: number) => {\r\n        props.deleteAffairCallback(_id)\r\n    }\r\n    return (\r\n        <div className={s.container}>\r\n            <button onClick={()=> deleteCallback(props.affair._id)} className={s.task_item_del_btn}>X</button>\r\n            <span className={s.task_item}>\r\n                {props.affair.name}\r\n            </span>\r\n            {/*<span className={s.task_priority}>*/}\r\n            {/*    {props.affair.priority}*/}\r\n            {/*</span>*/}\r\n            {renderDifferentPriority(props.affair.priority)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport s from './Affairs.module.css'\r\nimport Affair from './Affair'\r\nimport {AffairItemsType, AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((a: AffairItemsType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setFilter = (filter: FilterType) => {\r\n        props.setFilter(filter)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={()=>setFilter('all')} className={s.buttons}>All</button>\r\n            <button onClick={()=>setFilter('high')} className={s.buttons}>High</button>\r\n            <button onClick={()=>setFilter('middle')} className={s.buttons}>Middle</button>\r\n            <button onClick={()=>setFilter('low')} className={s.buttons}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport s from './HW2.module.css'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// fixed any\r\nexport type AffairType = Array<AffairItemsType> // fixed any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\nexport type AffairItemsType = { // I made this type and use in Affairs-component\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\n\r\n// constants\r\nconst defaultAffairs: AffairType = [ // fixed any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'}\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType, filter: FilterType): any => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: AffairType, _id: number): any => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType>(defaultAffairs) // fixed any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // fixed any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={s.main_container}>\r\n                <Affairs\r\n                    data={filteredAffairs}\r\n                    setFilter={setFilter}\r\n                    deleteAffairCallback={deleteAffairCallback}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string | null\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error === 'Incorrect characters' ? s.error : \"\"\r\n    const errorMessageClass = error === 'Incorrect characters' ? s.errorText : \"\"\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n            <div className={errorMessageClass}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {v1} from \"uuid\";\r\nimport {userArrayType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: userArrayType\r\n    addUserCallback: (id: string, name: string) => void\r\n}\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim() !== '') {\r\n            alert(`Hello  ${name}!`)\r\n            addUserCallback(v1(), name)\r\n        }\r\n        else {\r\n            setError('Incorrect characters')\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\nexport type userArrayType = Array<UserType>\r\n\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n\r\n    const [users, setUsers] = useState<userArrayType>([])\r\n\r\n    const addUserCallback = (id: string, name: string) => {\r\n        const newUser = {_id: v1(), name: name}\r\n        setUsers([newUser, ...users])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange && onChange(e) // для того чтобы input был контролируемым\r\n        onChange?.(e)\r\n        onChangeText && onChangeText(e.currentTarget.value) // для\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    const onCl = () => {\r\n        alert(restProps.children)\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={onCl}\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}